--- a/retrace/glws_egl.cpp
+++ b/retrace/glws_egl.cpp
@@ -47,7 +47,8 @@
 public:
     EGLConfig config;
 
-    EglVisual() :
+    EglVisual(Profile prof) :
+        Visual(prof),
         config(0)
     {}
 
@@ -127,8 +128,8 @@
 public:
     EGLContext context;
 
-    EglContext(const Visual *vis, Profile prof, EGLContext ctx) :
-        Context(vis, prof),
+    EglContext(const Visual *vis, EGLContext ctx) :
+        Context(vis),
         context(ctx)
     {}
 
@@ -173,8 +174,8 @@
 }
 
 Visual *
-createVisual(bool doubleBuffer, Profile profile) {
-    EglVisual *visual = new EglVisual();
+createVisual(bool doubleBuffer, unsigned samples, Profile profile) {
+    EglVisual *visual = new EglVisual(profile);
     // possible combinations
     const EGLint api_bits_gl[7] = {
         EGL_OPENGL_BIT | EGL_OPENGL_ES_BIT | EGL_OPENGL_ES2_BIT,
@@ -250,8 +251,9 @@
 }
 
 Context *
-createContext(const Visual *_visual, Context *shareContext, Profile profile, bool debug)
+createContext(const Visual *_visual, Context *shareContext, bool debug)
 {
+    Profile profile = _visual->profile;
     const EglVisual *visual = static_cast<const EglVisual *>(_visual);
     EGLContext share_context = EGL_NO_CONTEXT;
     EGLContext context;
@@ -268,9 +270,11 @@
         load("libGL.so.1");
         eglBindAPI(EGL_OPENGL_API);
         break;
+/*
     case PROFILE_CORE:
         assert(0);
         return NULL;
+*/
     case PROFILE_ES1:
         load("libGLESv1_CM.so.1");
         eglBindAPI(EGL_OPENGL_ES_API);
@@ -292,7 +296,7 @@
 
     eglBindAPI(api);
 
-    return new EglContext(visual, profile, context);
+    return new EglContext(visual, context);
 }
 
 bool
